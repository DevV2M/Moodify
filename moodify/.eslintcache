[{"/Users/vithu/Documents/GitHub/Moodify/moodify/src/index.js":"1","/Users/vithu/Documents/GitHub/Moodify/moodify/src/reportWebVitals.js":"2","/Users/vithu/Documents/GitHub/Moodify/moodify/src/App.js":"3","/Users/vithu/Documents/GitHub/Moodify/moodify/src/Components/LoginPage/LoginPage.js":"4","/Users/vithu/Documents/GitHub/Moodify/moodify/src/Components/SignIn/SignIn.js":"5","/Users/vithu/Documents/GitHub/Moodify/moodify/src/Components/SignUp/SignUp.js":"6"},{"size":500,"mtime":1673416369021,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1673396396156,"results":"9","hashOfConfig":"8"},{"size":223,"mtime":1673416515740,"results":"10","hashOfConfig":"8"},{"size":4013,"mtime":1673506467076,"results":"11","hashOfConfig":"8"},{"size":529,"mtime":1673501973676,"results":"12","hashOfConfig":"8"},{"size":732,"mtime":1673502244230,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1tjt84c",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/Users/vithu/Documents/GitHub/Moodify/moodify/src/index.js",[],["30","31"],"/Users/vithu/Documents/GitHub/Moodify/moodify/src/reportWebVitals.js",[],"/Users/vithu/Documents/GitHub/Moodify/moodify/src/App.js",[],"/Users/vithu/Documents/GitHub/Moodify/moodify/src/Components/LoginPage/LoginPage.js",["32","33","34","35","36"],"import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport inst_image from '../../images/moodifyimage.png';\nimport inst_logo from '../../images/moodifylogo.png';\nimport './LoginPage.css';\nimport fb from '../../images/fb.png';\nimport appstore from '../../images/app.png';\nimport playstore from '../../images/play.png';\nimport SignIn from '../SignIn/SignIn';\nimport SignUp from '../SignUp/SignUp';\n\n\nclass LoginPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLogin: true\n        };\n    }\n    changeLogin=()=>{\n        if(this.state.isLogin)\n            this.setState({isLogin: false});\n        else\n            this.setState({isLogin: true})\n        \n    }\n\n    render() { \n        return ( \n            <div> \n                <Grid container>\n                    <Grid item xs = {3}>                        \n                    </Grid>\n                    <Grid item xs = {6}>\n                        <div className=\"loginpage_main\">   \n                            <div>   \n                                <img src = {inst_image} width = \"454px\" />\n                            </div>\n                            <div>\n                                <div className =\"loginpage_rightcomponent\">   \n                                    <img className='loginpage_logo' src = {inst_logo} />\n                                    <div className =\"logingpage_signin\">   \n                                        {\n                                            this.state.isLogin ? <SignIn/> : <SignUp/>\n                                        }\n                                           \n                                        <div className='login_ordiv'>\n                                            <div className='login_divider'></div>\n                                            <div className='login_or'>OR</div>\n                                            <div className='login_divider'></div>\n                                        </div>\n\n                                        <div className='login_fb'>\n                                            <img src={fb} width='15px' style={{\"marginRight\":\"5px\"}}/>Log in with Facebook\n                                        </div>\n                                        <div className=\"login_forgot\">Forgot password?</div>\n                                    </div>                                \n                                </div>\n                            \n                                <div className='login_signupoption'>\n                                    {\n                                        this.state.isLogin ? <div className='login_signin'>Don't have an account? <span onClick={this.changeLogin} style={{\"fontWeight\":\"bold\", \"color\":\"#0395F6\"}}>Sign up</span></div> : \n                                        <div className='login_signup'>Have an account? <span onClick={this.changeLogin} style={{\"fontWeight\":\"bold\", \"color\":\"#0395F6\"}}>Sign up</span></div>    \n                                    }\n                                                                         \n                                </div>\n\n                                <div className='loginpage_downloadSection'>\n                                    <div>\n                                    Get the app.    \n                                    </div>\n                                    <div className='loginpage_option'>\n                                        <img className='loginpage_dwimg' src={appstore} width=\"136px\" />\n                                        <img className='loginpage_dwimg' src={playstore} width=\"136px\" />\n                                    </div>\n                                </div>\n                            </div>                        \n                        </div>\n                    </Grid>\n                    <Grid item xs = {3}></Grid>\n                </Grid>\n            </div> \n         );\n    }\n}\n \nexport default LoginPage; ","/Users/vithu/Documents/GitHub/Moodify/moodify/src/Components/SignIn/SignIn.js",["37"],"import React, { Component } from 'react';\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {  }\n    render() { \n        return ( \n        <div>\n            <input className='loginpage_text' type =\"text\" placeholder =\"Phone number, username, or email\" />\n            <input className='loginpage_text' type = \"password\" placeholder='Password'/>\n            <button className='loginpage_button'>Log In</button>\n        </div>\n            \n        );\n    }\n}\n \nexport default SignIn;","/Users/vithu/Documents/GitHub/Moodify/moodify/src/Components/SignUp/SignUp.js",["38"],"import React, { Component } from 'react';\nimport \"./SignUp.css\";\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {  }\n    render() { \n        return ( \n            <div>\n                <input className='loginpage_text' type =\"text\" placeholder =\"Mobile number or Email\" />\n                <input className='loginpage_text' type =\"text\" placeholder =\"Full Name\" />\n                <input className='loginpage_text' type =\"text\" placeholder =\"Username\" />\n                <input className='loginpage_text' type = \"password\" placeholder='Password'/>\n                <button className='loginpage_button'>Sign Up</button>\n            </div>\n\n        );\n    }\n}\n \nexport default SignUp;",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":37,"column":33,"nodeType":"45","endLine":37,"endColumn":75},{"ruleId":"43","severity":1,"message":"44","line":41,"column":37,"nodeType":"45","endLine":41,"endColumn":89},{"ruleId":"43","severity":1,"message":"44","line":54,"column":45,"nodeType":"45","endLine":54,"endColumn":103},{"ruleId":"43","severity":1,"message":"44","line":73,"column":41,"nodeType":"45","endLine":73,"endColumn":105},{"ruleId":"43","severity":1,"message":"44","line":74,"column":41,"nodeType":"45","endLine":74,"endColumn":106},{"ruleId":"46","severity":1,"message":"47","line":4,"column":5,"nodeType":"48","messageId":"49","endLine":6,"endColumn":6},{"ruleId":"46","severity":1,"message":"47","line":5,"column":5,"nodeType":"48","messageId":"49","endLine":7,"endColumn":6},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]